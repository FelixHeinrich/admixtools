% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/toposearch.R
\name{satisfies_eventorder}
\alias{satisfies_eventorder}
\title{Test f4 constraints on a graph}
\usage{
satisfies_eventorder(graph, event_order, strict = TRUE)
}
\arguments{
\item{graph}{An admixture graph}

\item{event_order}{A data frame with columns \code{earlier1}, \code{earlier2}, \code{later1}, \code{later2}}

\item{strict}{What to do in case some events are not determined by the graph.
If \code{strict = TRUE} (the default), the function will only return \code{TRUE} if there are no ambiguous constraints.
Otherwise, \code{TRUE} will be returned as long as no constraint is directly contradicted.}
}
\value{
\code{TRUE} if all constraints are satisfied, else \code{FALSE}
}
\description{
This function returns \code{TRUE} if and only if the admixture graph is compatible with
all event orders listed in event_order
}
\examples{
\dontrun{
# Test whether the split between A and B is earlier than the split between C and D,
#   and whether the split between C and D is earlier than the terminal branch leading to E
constrain_events = tribble(
  ~earlier1, ~earlier2, ~later1, ~later2,
  'A', 'B', 'C', 'D',
  'C', 'D', 'E', NA)
satisfies_eventorder(random_admixturegraph(5, 0), constrain_events)
}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/toposearch.R
\name{find_graphs}
\alias{find_graphs}
\title{Find well fitting admixture graphs}
\usage{
find_graphs(
  f2_data,
  pops = NULL,
  outpop = NULL,
  numrep = 1,
  numgraphs = 50,
  numgen = 5,
  numsel = 5,
  numadmix = 0,
  numstart = 1,
  keep = c("all", "best", "last"),
  initgraph = NULL,
  mutfuns = c("spr_leaves", "spr_all", "swap_leaves", "move_admixedge_once",
    "flipadmix_random"),
  store_intermediate = NULL,
  parallel = TRUE,
  stop_after = NULL,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{f2_data}{A 3d array of blocked f2 statistics, output of \code{\link{f2_from_precomp}}.
alternatively, a directory with precomputed data. see \code{\link{extract_f2}} and \code{\link{extract_counts}}.}

\item{pops}{Populations for which to fit admixture graphs}

\item{outpop}{An outgroup population which will split at the root from all other populations in all tested graphs. If one population is know to be an outgroup, designating it as \code{outpop} will greatly reduce the search space compared to including it and not designating it as \code{outpop}.}

\item{numrep}{Number of independent repetitions (each repetition can be run in parallel)}

\item{numgraphs}{Number of graphs in each generation}

\item{numgen}{Number of generations}

\item{numsel}{Number of graphs which are selected in each generation. Should be less than \code{numgraphs}.}

\item{numadmix}{Number of admixture events within each graph}

\item{numstart}{Number of random initializations in each call to \code{qpgraph}. Defaults to 1, to speed up the graph optimization.}

\item{keep}{Which models should be returned. One of \code{all}, \code{best}, \code{last}
\itemize{
\item \code{all} (default): Return all evaluated graphs
\item \code{best}: Return only the best fitting graph from each repeat and each generation
\item \code{last}: Return all graphs from the last generation
}}

\item{initgraph}{Optional graph to start with. If \code{NULL}, optimization will start with random graphs.}

\item{mutfuns}{The names of funcations used to modify graphs.
\itemize{
\item \code{spr_leaves}: Subtree prune and regraft leaves. Cuts a leaf node and attaches it to a random other edge in the graph.
\item \code{spr_all}: Subtree prune and regraft. Cuts any edge and attaches the new orphan node to a random other edge in the graph, keeping the number of admixture nodes constant.
\item \code{swap_leaves}: Swaps two leaf nodes.
\item \code{move_admixedge_once}: Moves an admixture edge to a nearby location.
\item \code{flipadmix_random}: Flips the direction of an admixture edge (if possible).
}}

\item{store_intermediate}{Path and prefix of files for intermediate results to \code{.rds}. Can be useful if \code{find_graphs} doesn't finish sucessfully.}

\item{parallel}{Parallelize over repeats (if \code{numrep > 1}) or graphs (if \code{numrep == 1}) by replacing \code{\link[purrr]{map}} with \code{\link[furrr]{future_map}}. Will only be effective if \code{\link[future]{plan}} has been set.}

\item{stop_after}{Stop optimization after \code{stop_after} seconds (and after finishing the current generation).}

\item{verbose}{Print progress updates}

\item{...}{Additional arguments passed to \code{\link{qpgraph}}}
}
\value{
A nested data frame with one model per line
}
\description{
This function generates and evaluates admixture graphs in \code{numgen} iterations across \code{numrep} independent repeats
to find well fitting admixturegraphs. It uses the function \code{\link[furrr]{future_map}}
to parallelize across the independent repeats. The function \code{\link[future]{plan}} can be called
to specify the details of the parallelization. This can be used to parallelize across cores or across nodes on
a compute cluster. Setting \code{numadmix} to 0 will search for well fitting trees, which is much faster than searching
for admixture graphs with many admixture nodes.
}
\examples{
\dontrun{
find_graphs(example_f2_blocks, numrep = 200, numgraphs = 100,
            numgen = 20, numsel = 5, numadmix = 3)
}
}
\seealso{
\code{\link{qpgraph}}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/toposearch.R
\name{find_graphs2}
\alias{find_graphs2}
\title{Find well fitting admixture graphs}
\usage{
find_graphs2(
  f2_blocks,
  initgraph = NULL,
  numgen = 1,
  numgraphs = 10,
  numadmix = 0,
  stopscore = 0,
  stop_after = NULL,
  stopafter_noimprovement = 15,
  mutfuns = namedList(spr_leaves, spr_all, swap_leaves, move_admixedge_once,
    flipadmix_random, mutate_n),
  admix_constraints = NULL,
  event_order = NULL,
  reject_f4z = 0,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{f2_blocks}{A 3d array of blocked f2 statistics, output of \code{\link{f2_from_precomp}} or \code{\link{extract_f2}}}

\item{numgen}{Number of generations}

\item{numgraphs}{Number of graphs in each generation}

\item{numadmix}{Number of admixture events within each graph. (Only relevant if \code{initgraph = NULL})}

\item{mutfuns}{Functions used to modify graphs. Defaults to the following:
\itemize{
\item \code{\link{spr_leaves}}: Subtree prune and regraft leaves. Cuts a leaf node and attaches it
to a random other edge in the graph.
\item \code{\link{spr_all}}: Subtree prune and regraft. Cuts any edge and attaches the new orphan node
to a random other edge in the graph, keeping the number of admixture nodes constant.
\item \code{\link{swap_leaves}}: Swaps two leaf nodes.
\item \code{\link{move_admixedge_once}}: Moves an admixture edge to a nearby location.
\item \code{\link{flipadmix_random}}: Flips the direction of an admixture edge (if possible).
\item \code{\link{mutate_n}}: Apply \code{n} of the mutation functions in this list to a graph (defaults to 2).
}}

\item{verbose}{Print progress updates}

\item{...}{Additional arguments passed to \code{\link{qpgraph}}}
}
\value{
A nested data frame with one model per line
}
\description{
This function generates and evaluates admixture graphs in \code{numgen} iterations
to find well fitting admixturegraphs.
}
\examples{
\dontrun{
pops = dimnames(example_f2_blocks)[[1]]
initgraph = random_admixturegraph(pops, 2, outpop = 'Chimp.REF')
res = find_graphs2(example_f2_blocks, initgraph, numgen = 100)
res \%>\% slice_min(score)
}
\dontrun{
# Making new mutation functions by modifying or combining existing ones:
newfun1 = function(graph, ...) mutate_n(graph, 3, ...)
newfun2 = function(graph, ...) flipadmix_random(spr_leaves(graph, ...), ...)
find_graphs(f2_blocks, mutfuns = namedList(spr_leaves, newfun1, newfun2), mutprobs = c(0.2, 0.3, 0.5))
}
}
\seealso{
\code{\link{qpgraph}}
}
